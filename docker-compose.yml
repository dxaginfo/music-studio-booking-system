version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: music-studio-booking-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: music_studio_booking
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    container_name: music-studio-booking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: music-studio-booking-api
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/music_studio_booking
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-production-jwt-secret
      JWT_EXPIRES_IN: 24h
      CORS_ORIGIN: http://localhost:3000
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: music-studio-booking-client
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: